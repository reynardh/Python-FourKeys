### Work in progress! 
# This Cloud Build config will provision 4Keys infra using the modules in /terraform
# and then confirm that the dashboard is working correctly

steps:
# TODO: clean any existing artifacts

# create terraform config
- id: terraform config
  name: 'gcr.io/$PROJECT_ID/fourkeys-builder'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      cat > main.tf <<EOF
      module "fourkeys" {
        source    = "./terraform/modules/fourkeys"
        project_id = "$_TARGET_PROJECT"
        parsers   = []
        enable_build_images=true
        enable_apis=false
        region="us-east4"
        bigquery_region="US"
      }
      EOF

# intialize terraform
- id: terraform init
  name: 'gcr.io/$PROJECT_ID/fourkeys-builder'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      # configure remote terraform backend GCS
      cat > /workspace/backend.tf <<EOF
      terraform {
        backend "gcs" {
          bucket  = "$_TARGET_PROJECT-tf-state"
          prefix  = "terraform/state"
        }
      }
      EOF
      terraform init

# apply terraform
- id: terraform apply
  name: 'gcr.io/$PROJECT_ID/fourkeys-builder'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      terraform apply -auto-approve

# generate test data
- id: generate data
  name: 'gcr.io/$PROJECT_ID/fourkeys-builder'
  entrypoint: /bin/bash
  args:
    - '-c'
    - |
      export WEBHOOK=`gcloud run services list --project=$_TARGET_PROJECT | grep event-handler | awk '{print $4}'` && \
      export SECRET=`gcloud secrets versions access 1 --secret=event-handler --project=$_TARGET_PROJECT` && \
      python3 data_generator/generate_data.py --vc_system=github

# TODO: validate installation

substitutions:
  _TARGET_PROJECT: fourkeys-testing-target-v1
